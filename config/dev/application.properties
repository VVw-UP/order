## Tomcat
server.port=8085

## Flyway Migration
spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}
spring.flyway.schemas=cfs
spring.flyway.baselineOnMigrate=true
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

## Database
spring.main.allow-bean-definition-overriding=true
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://192.168.1.98:5433/postgres?currentSchema=cfs
spring.datasource.username=postgres
spring.datasource.password=123456
# Hikari will use the above plus the following to setup connection pooling
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=DatebookHikariCP
spring.datasource.hikari.max-lifetime=60000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

## MyBatis-Plus configuration
mybatis-plus.configuration.map-underscore-to-camel-case=true

#####################################
######## KAFKA Configuration ########
#####################################
spring.kafka.bootstrap-servers=192.168.1.98:9092
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=1
## Kerberos
#spring.kafka.jaas.enabled=false
#spring.kafka.properties.security.protocol=SASL_PLAINTEXT
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.sasl.mechanisms=GSSAPI
#spring.kafka.properties.sasl.kerberos.service.name=kafka
#spring.kafka.jaas.config.kafkaClientJaasPath=classpath:kafka_client_jaas.conf
#spring.kafka.jaas.options.keyTab=krb5.keytab
#spring.kafka.jaas.options.principal=admin/admin@OCBC.COM
#spring.kafka.jaas.options.useKeyTab=true
#spring.kafka.jaas.options.storeKey=true
#spring.kafka.jaas.config.krb5Path=/krb5.conf
## send order topic
spring.kafka.topic.sendOrderTopic=order-topic

###########################
# Schedule
###########################
## idempotent key
idempotent.Schedule=Schedule
schedule.cron.orderTimeOut=0/10 * * * * ?
schedule.cron.reset=0 0 6 1/1 * ?
schedule.cache.clear=0 0 0 * * ?


###########################
# IBM MQ
###########################
ibm.mq.enable=true
ibm.mq.queueManager=QMgrOCBC
ibm.mq.channel=OCBC.LC
ibm.mq.connName=192.168.1.98(10001)
ibm.mq.user=mqm
ibm.mq.password=mqm
# true=no use SSL;   false=use SLL
ibm.mq.useIBMCipherMappings=true
ibm.mq.ssl-cipher-suite=TLS_RSA_WITH_AES_256_GCM_SHA384
# Absolute path
ibm.mq.ssl.truststorePath=C:/Users/pats/Desktop/ocbc/ssl_key/Truststore/clientTruststore.p12
ibm.mq.ssl.truststorePassword=Welcome1
# Absolute path
ibm.mq.ssl.keyStorePath=C:/Users/pats/Desktop/ocbc/ssl_key/Keystore/clientKeystore.p12
ibm.mq.ssl.keyStorePassword=Welcome1

ibm.mq.socket.topic=CFS.OCBC.SOCKET.TOPIC
ibm.mq.rate.topic=OMS.OCBC.RATE.TOPIC
ibm.mq.topic.changeSourceTopic=OMS.OCBC.CHANGESOURCE.TOPIC
###########################
# mybatis-plus config
###########################
mybatis-plus.type-handlers-package=com.ocbc.oms.app.typehandler

currency.default.timezone=America/New_York
currency.default.nzd.time=15:00:00
currency.default.ny.time=17:00:00
currency.default.local.timezone=Singapore

rateSource.api.baseUrl=http://localhost:21882
rateSource.api.getRateSourceIdUrl=/oms-api/api/Maintance/getRateSourceId